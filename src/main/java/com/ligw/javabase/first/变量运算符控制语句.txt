局部变量 使用前必须声明或初始化

常量 final 命名规则：全大写加下划线区分单词

命名规范
    变量名
    方法名
    常量名
    类名
    包名


JAVA运算符
    算术运算符：+ - * / % ++ --
        a++ 与 ++a  a++ 先赋值再自增 ++a 先自增后赋值   a-- 与 --a同理
    赋值运算符 =
    关系运算符 > <
    逻辑运算符 && || ！ （逻辑或和逻辑与采用短路方式 第一个符合条件则就不会计算下去）
    位运算符：
        ~（去反/非）
        &（按位与）
        |（按位或）
        ^（按位异或）
        <<(左移运算符) 左移一位相当于乘以2 int a = 12<<2;
        >>(右移运算符) 右移一位相当于除以2 int b = 12>>2;
    条件运算符: ? : (三目运算符)
    扩展赋值运算符：+= -= *= /=

==
==比较的是变量(栈)内存中存放的对象的(堆)内存地址。
如果是具体的阿拉伯数字的比较，值相等则为true，如：int a=10 与 long b=10L 与 double c=10.0都是相同的（为true），因为他们都指向地址为10的堆。

+=与+
+=操作符会进行隐式自动类型转换(对右边的表达式结果强转匹配左边的数据类型),此处a+=b隐式的将加操作的结果类型强制转换为持有结果的类型, 而a=a+b则不会自动进行类型转换
``` java
byte a = 127,b = 127;
b = a + b; // 报编译错误:cannot convert from int to byte
b += a;

short s1= 1;
s1 = s1 + 1; // 错误写法。数字默认是int型
s1 += 1;
```



控制语句
    顺序结构
    选择结构
        if(){} else {}
        if() {}  else if() {} else{}
        case

    循环结构




