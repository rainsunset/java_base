面向对象编程三大基本特征：
    继承
    封装（encapsulation）：高内聚 低耦合
    多态（polymorphism）：编译时多态(方法重载)、运行时多态(继承+方法重写)

子类重写继承方法：
    1.	发生在父类与子类之间
    2.	方法名，参数列表，返回类型（除过子类中方法的返回类型是父类中返回类型的子类）必须相同
    3.	访问修饰符的限制一定要大于被重写方法的访问修饰符（public>protected>default>private)
    4.	重写方法一定不能抛出新的检查异常或者比被重写方法申明更加宽泛的检查型异常

方法的重载
    1.	重载Overload是一个类中多态性的一种表现
    2.	重载要求同名方法的参数列表不同(参数类型，参数个数甚至是参数顺序)
    3.	重载的时候，返回值类型可以相同也可以不相同。无法以返回型别作为重载函数的区分标准

垃圾回收机制：
    将对象空间赋值为null 即可 垃圾回收机制会回收所有“不可达”对象的内存空间
    程序员无权调用垃圾回收器
    程序眼可以通过System.gc() 通知GC运行 但是JAVA规范并不能保证立刻运行
    finalize方法 是java提供给程序员来释放对象或资源的方法，但是尽量少用

java  常用包
    java.lang
    java语言核心类 如：String Math Integer System Thread。提供常用功能

    java.awt
    包含了构成抽象窗口工具集的多各类，这些类被用于构建和管理应用程序的图形用户管理界面（GUI）

    java.net
    执行与网络操作相关的类

    java.io
    包含能提供输入输出功能的类

    java.util
    包含一些实用工具类，如定义系统特性使用与日期日历相关的函数

java.util.Scanner 获取键盘输入对象
    Scanner sc = new Scanner(System.in);
    String str = s.next();
    int i = s.nextInt();





